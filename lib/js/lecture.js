// Generated by CoffeeScript 1.7.1
(function() {
  var KeyHandler, Slides,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  console.log("**** lecture.js");

  $(document).tooltip({
    content: function() {
      return $(this).prop('title');
    }
  });

  Slides = (function() {
    function Slides() {
      this.navigate = __bind(this.navigate, this);
      if (!$(document.body).hasClass("slides")) {
        return;
      }
      this.sections = $("section");
      this.sections.hide();
      this.sections.css({
        visibility: "visible"
      });
      this.current = 0;
      $(this.sections[this.current]).show();
      this.lecture = {
        doStep: (function(_this) {
          return function() {
            return _this.navigate(1);
          };
        })(this),
        back: (function(_this) {
          return function() {
            return _this.navigate(-1);
          };
        })(this),
        reset: (function(_this) {
          return function() {};
        })(this)
      };
      KeyHandler.init(this.lecture);
      this.number = $(".slide-navigation .slide-number");
      this.next = $(".slide-navigation .next");
      this.prev = $(".slide-navigation .prev");
      this.setNavButtons();
      this.next.click((function(_this) {
        return function() {
          return _this.lecture.doStep();
        };
      })(this));
      this.prev.click((function(_this) {
        return function() {
          return _this.lecture.back();
        };
      })(this));
    }

    Slides.prototype.setNavButtons = function() {
      var enable;
      this.number.html("" + (this.current + 1) + " of " + this.sections.length);
      enable = (function(_this) {
        return function(b, e) {
          if (e == null) {
            e = true;
          }
          b.toggleClass("nav-button-enable", e);
          return b.toggleClass("nav-button-disable", !e);
        };
      })(this);
      enable(this.next, this.current < this.sections.length - 1);
      return enable(this.prev, this.current > 0);
    };

    Slides.prototype.navigate = function(d) {
      $(this.sections[this.current]).hide();
      if (d > 0 && this.current < this.sections.length - 1) {
        this.current++;
      }
      if (d < 0 && this.current > 0) {
        this.current--;
      }
      $(this.sections[this.current]).show();
      return this.setNavButtons();
    };

    return Slides;

  })();

  KeyHandler = (function() {
    function KeyHandler() {}

    KeyHandler.lecture = null;

    KeyHandler.init = function(lecture) {
      var handler;
      KeyHandler.lecture = lecture;
      handler = (function(_this) {
        return function(evt) {
          return KeyHandler.keyDown(evt);
        };
      })(this);
      $("body").unbind("keydown", handler);
      return $("body").bind("keydown", handler);
    };

    KeyHandler.keyDown = function(evt) {
      var lecture;
      lecture = KeyHandler.lecture;
      if (evt.target.tagName !== "BODY") {
        return;
      }
      if (!lecture) {
        return;
      }
      if (evt.keyCode === 37) {
        return lecture != null ? lecture.back() : void 0;
      } else if (evt.keyCode === 39) {
        return lecture != null ? lecture.doStep() : void 0;
      }
    };

    return KeyHandler;

  })();

  if (window.$blab == null) {
    window.$blab = {};
  }

  $blab.Slides = Slides;

}).call(this);
